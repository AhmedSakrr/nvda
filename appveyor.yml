os: Visual Studio 2019
version: "{branch}-{build}"

branches:
 only:
  - master
  - beta
  - rc
  - /try-.*/
  # For tags, branch = tag if GitHub couldn't work out the base branch.
  - /release-.*/
  
environment:
 PY_PYTHON: 3.7-32
 encFileKey:
  secure: ekOvuyywHuDdGZmRmoj+b3jfrq39A2xlx4RD5ZUGd/8=
 mozillaSymsAuthToken:
  secure: p37Fxo78fsRdmR8v8TPz978QvVaqvbjdIBzFe8ZOpX0FUprm46rkhd374QM1CqMO
 symstore: C:\Program Files (x86)\Windows Kits\10\Debuggers\x64\symstore.exe

init:
 - ps: |
     # iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
     $pythonVersion = (py --version)
     echo $pythonVersion
     if ($env:APPVEYOR_REPO_TAG_NAME -and $env:APPVEYOR_REPO_TAG_NAME.StartsWith("release-")) {
      # Strip "release-" prefix.
      $version = $env:APPVEYOR_REPO_TAG_NAME.Substring(8)
      Set-AppveyorBuildVariable "release" "1"
      if ($env:APPVEYOR_REPO_TAG_NAME.Contains("rc") -or $env:APPVEYOR_REPO_TAG_NAME.Contains("beta")) {
       $versionType = "beta"
      } else {
       $versionType = "stable"
      }
     } else {
      if($env:APPVEYOR_PULL_REQUEST_NUMBER) {
       $version = "pr$env:APPVEYOR_PULL_REQUEST_NUMBER-$env:APPVEYOR_BUILD_NUMBER," + $env:APPVEYOR_REPO_COMMIT.Substring(0, 8)
      } elseif($env:APPVEYOR_REPO_BRANCH -eq "master") {
       $version = "alpha-$env:APPVEYOR_BUILD_NUMBER," + $env:APPVEYOR_REPO_COMMIT.Substring(0, 8)
      } else {
       $version = "$env:APPVEYOR_REPO_BRANCH-$env:APPVEYOR_BUILD_NUMBER," + $env:APPVEYOR_REPO_COMMIT.Substring(0, 8)
       if($env:APPVEYOR_REPO_BRANCH.StartsWith("try-release-")) {
        Set-AppveyorBuildVariable "release" "1"
       }
      }
      # The version is unique even for rebuilds, so we can use it for the AppVeyor version.
      Update-AppveyorBuild -Version $version
      if($env:APPVEYOR_REPO_BRANCH -eq "master") {
       $versionType = "snapshot:alpha"
      } elseif (!$env:APPVEYOR_REPO_BRANCH.StartsWith("try-")) {
       $versionType = "snapshot:$env:APPVEYOR_REPO_BRANCH"
      }
     }
     Set-AppveyorBuildVariable "version" $version
     if ($versionType) {
      Set-AppveyorBuildVariable "versionType" $versionType
     }

clone_depth: 0

install:
 - cd appveyor
 # Decrypt files.
 - ps: |
    if(!$env:APPVEYOR_PULL_REQUEST_NUMBER) {
     openssl enc -md md5 -aes-256-cbc -d -pass pass:$env:encFileKey -in authenticode.pfx.enc -out authenticode.pfx
     openssl enc -md md5 -aes-256-cbc -d -pass pass:$env:encFileKey -in ssh_id_rsa.enc -out ssh_id_rsa
     # Install ssh stuff.
     copy ssh_id_rsa $env:userprofile\.ssh\id_rsa
    }
 - type ssh_known_hosts >> %userprofile%\.ssh\known_hosts
 - cd ..
 - git submodule update --init

build_script:
 - ps: |
     echo "hello" | ssh nvaccess@deploy.nvaccess.org nvdaAppveyorHook
